// Code generated by protoc-gen-go. DO NOT EDIT.
// source: messages.proto

/*
Package messages is a generated protocol buffer package.

It is generated from these files:
	messages.proto

It has these top-level messages:
	GetMessagesRequest
	GetMessagesResponse
	AddMessageRequest
	AddMessageResponse
	GetMessageRequest
	GetMessageResponse
	DeleteMessagesRequest
	DeleteMessagesRespone
	Message
*/
package messages

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetMessagesRequest struct {
}

func (m *GetMessagesRequest) Reset()                    { *m = GetMessagesRequest{} }
func (m *GetMessagesRequest) String() string            { return proto.CompactTextString(m) }
func (*GetMessagesRequest) ProtoMessage()               {}
func (*GetMessagesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type GetMessagesResponse struct {
	Messages []*Message `protobuf:"bytes,1,rep,name=messages" json:"messages,omitempty"`
}

func (m *GetMessagesResponse) Reset()                    { *m = GetMessagesResponse{} }
func (m *GetMessagesResponse) String() string            { return proto.CompactTextString(m) }
func (*GetMessagesResponse) ProtoMessage()               {}
func (*GetMessagesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GetMessagesResponse) GetMessages() []*Message {
	if m != nil {
		return m.Messages
	}
	return nil
}

type AddMessageRequest struct {
	Text string `protobuf:"bytes,1,opt,name=text" json:"text,omitempty"`
}

func (m *AddMessageRequest) Reset()                    { *m = AddMessageRequest{} }
func (m *AddMessageRequest) String() string            { return proto.CompactTextString(m) }
func (*AddMessageRequest) ProtoMessage()               {}
func (*AddMessageRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *AddMessageRequest) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type AddMessageResponse struct {
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *AddMessageResponse) Reset()                    { *m = AddMessageResponse{} }
func (m *AddMessageResponse) String() string            { return proto.CompactTextString(m) }
func (*AddMessageResponse) ProtoMessage()               {}
func (*AddMessageResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *AddMessageResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type GetMessageRequest struct {
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *GetMessageRequest) Reset()                    { *m = GetMessageRequest{} }
func (m *GetMessageRequest) String() string            { return proto.CompactTextString(m) }
func (*GetMessageRequest) ProtoMessage()               {}
func (*GetMessageRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *GetMessageRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type GetMessageResponse struct {
	Text string `protobuf:"bytes,1,opt,name=text" json:"text,omitempty"`
}

func (m *GetMessageResponse) Reset()                    { *m = GetMessageResponse{} }
func (m *GetMessageResponse) String() string            { return proto.CompactTextString(m) }
func (*GetMessageResponse) ProtoMessage()               {}
func (*GetMessageResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *GetMessageResponse) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type DeleteMessagesRequest struct {
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteMessagesRequest) Reset()                    { *m = DeleteMessagesRequest{} }
func (m *DeleteMessagesRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteMessagesRequest) ProtoMessage()               {}
func (*DeleteMessagesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *DeleteMessagesRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type DeleteMessagesRespone struct {
}

func (m *DeleteMessagesRespone) Reset()                    { *m = DeleteMessagesRespone{} }
func (m *DeleteMessagesRespone) String() string            { return proto.CompactTextString(m) }
func (*DeleteMessagesRespone) ProtoMessage()               {}
func (*DeleteMessagesRespone) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

type Message struct {
	Id   int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Text string `protobuf:"bytes,2,opt,name=text" json:"text,omitempty"`
}

func (m *Message) Reset()                    { *m = Message{} }
func (m *Message) String() string            { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()               {}
func (*Message) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *Message) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Message) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func init() {
	proto.RegisterType((*GetMessagesRequest)(nil), "messages.GetMessagesRequest")
	proto.RegisterType((*GetMessagesResponse)(nil), "messages.GetMessagesResponse")
	proto.RegisterType((*AddMessageRequest)(nil), "messages.AddMessageRequest")
	proto.RegisterType((*AddMessageResponse)(nil), "messages.AddMessageResponse")
	proto.RegisterType((*GetMessageRequest)(nil), "messages.GetMessageRequest")
	proto.RegisterType((*GetMessageResponse)(nil), "messages.GetMessageResponse")
	proto.RegisterType((*DeleteMessagesRequest)(nil), "messages.DeleteMessagesRequest")
	proto.RegisterType((*DeleteMessagesRespone)(nil), "messages.DeleteMessagesRespone")
	proto.RegisterType((*Message)(nil), "messages.Message")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for MessagesService service

type MessagesServiceClient interface {
	GetMessages(ctx context.Context, in *GetMessagesRequest, opts ...grpc.CallOption) (*GetMessagesResponse, error)
	AddMessage(ctx context.Context, in *AddMessageRequest, opts ...grpc.CallOption) (*AddMessageResponse, error)
	GetMessage(ctx context.Context, in *GetMessageRequest, opts ...grpc.CallOption) (*GetMessageResponse, error)
	DeleteMessages(ctx context.Context, in *DeleteMessagesRequest, opts ...grpc.CallOption) (*DeleteMessagesRespone, error)
}

type messagesServiceClient struct {
	cc *grpc.ClientConn
}

func NewMessagesServiceClient(cc *grpc.ClientConn) MessagesServiceClient {
	return &messagesServiceClient{cc}
}

func (c *messagesServiceClient) GetMessages(ctx context.Context, in *GetMessagesRequest, opts ...grpc.CallOption) (*GetMessagesResponse, error) {
	out := new(GetMessagesResponse)
	err := grpc.Invoke(ctx, "/messages.MessagesService/GetMessages", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messagesServiceClient) AddMessage(ctx context.Context, in *AddMessageRequest, opts ...grpc.CallOption) (*AddMessageResponse, error) {
	out := new(AddMessageResponse)
	err := grpc.Invoke(ctx, "/messages.MessagesService/AddMessage", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messagesServiceClient) GetMessage(ctx context.Context, in *GetMessageRequest, opts ...grpc.CallOption) (*GetMessageResponse, error) {
	out := new(GetMessageResponse)
	err := grpc.Invoke(ctx, "/messages.MessagesService/GetMessage", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messagesServiceClient) DeleteMessages(ctx context.Context, in *DeleteMessagesRequest, opts ...grpc.CallOption) (*DeleteMessagesRespone, error) {
	out := new(DeleteMessagesRespone)
	err := grpc.Invoke(ctx, "/messages.MessagesService/DeleteMessages", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for MessagesService service

type MessagesServiceServer interface {
	GetMessages(context.Context, *GetMessagesRequest) (*GetMessagesResponse, error)
	AddMessage(context.Context, *AddMessageRequest) (*AddMessageResponse, error)
	GetMessage(context.Context, *GetMessageRequest) (*GetMessageResponse, error)
	DeleteMessages(context.Context, *DeleteMessagesRequest) (*DeleteMessagesRespone, error)
}

func RegisterMessagesServiceServer(s *grpc.Server, srv MessagesServiceServer) {
	s.RegisterService(&_MessagesService_serviceDesc, srv)
}

func _MessagesService_GetMessages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMessagesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessagesServiceServer).GetMessages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/messages.MessagesService/GetMessages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessagesServiceServer).GetMessages(ctx, req.(*GetMessagesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MessagesService_AddMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddMessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessagesServiceServer).AddMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/messages.MessagesService/AddMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessagesServiceServer).AddMessage(ctx, req.(*AddMessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MessagesService_GetMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessagesServiceServer).GetMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/messages.MessagesService/GetMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessagesServiceServer).GetMessage(ctx, req.(*GetMessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MessagesService_DeleteMessages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteMessagesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessagesServiceServer).DeleteMessages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/messages.MessagesService/DeleteMessages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessagesServiceServer).DeleteMessages(ctx, req.(*DeleteMessagesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MessagesService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "messages.MessagesService",
	HandlerType: (*MessagesServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetMessages",
			Handler:    _MessagesService_GetMessages_Handler,
		},
		{
			MethodName: "AddMessage",
			Handler:    _MessagesService_AddMessage_Handler,
		},
		{
			MethodName: "GetMessage",
			Handler:    _MessagesService_GetMessage_Handler,
		},
		{
			MethodName: "DeleteMessages",
			Handler:    _MessagesService_DeleteMessages_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "messages.proto",
}

func init() { proto.RegisterFile("messages.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 282 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0xdd, 0x4a, 0xc3, 0x40,
	0x10, 0x85, 0x9b, 0x54, 0xfc, 0x39, 0x85, 0x48, 0x46, 0xc5, 0x12, 0x23, 0x96, 0x55, 0x68, 0x6e,
	0xda, 0x8b, 0xfa, 0x04, 0x42, 0x41, 0x04, 0xbd, 0x89, 0xbe, 0x80, 0x9a, 0x41, 0x02, 0x6a, 0x6a,
	0x77, 0x15, 0xdf, 0xd1, 0x97, 0x12, 0xf3, 0xb3, 0xbb, 0xc9, 0xc6, 0xde, 0x75, 0x67, 0xce, 0x7c,
	0xa7, 0x73, 0x26, 0x08, 0xde, 0x58, 0xca, 0xc7, 0x17, 0x96, 0xf3, 0xd5, 0xba, 0x50, 0x05, 0xed,
	0x36, 0x6f, 0x71, 0x08, 0xba, 0x66, 0x75, 0x57, 0x3f, 0x53, 0xfe, 0xf8, 0x64, 0xa9, 0xc4, 0x12,
	0x07, 0xad, 0xaa, 0x5c, 0x15, 0xef, 0x92, 0x69, 0x06, 0x3d, 0x38, 0xf6, 0x26, 0xc3, 0x64, 0xb4,
	0x08, 0xe7, 0x9a, 0x5c, 0xab, 0x53, 0xc3, 0x9e, 0x22, 0xbc, 0xca, 0xb2, 0xa6, 0x5e, 0xa1, 0x89,
	0xb0, 0xa5, 0xf8, 0x5b, 0x8d, 0xbd, 0x89, 0x97, 0xec, 0xa5, 0xe5, 0x6f, 0x71, 0x01, 0xb2, 0x85,
	0xb5, 0x5b, 0x00, 0x3f, 0xcf, 0x4a, 0xdd, 0x30, 0xf5, 0xf3, 0x4c, 0x9c, 0x23, 0x34, 0x7f, 0xaa,
	0xc1, 0x75, 0x45, 0x89, 0xbd, 0x8f, 0x46, 0xf5, 0x99, 0x4e, 0x71, 0xb4, 0xe4, 0x57, 0x56, 0xdc,
	0x59, 0xde, 0x41, 0x1e, 0xbb, 0xc2, 0x3f, 0x2c, 0x8b, 0x19, 0x76, 0xea, 0x52, 0x77, 0x46, 0x1b,
	0xfa, 0xc6, 0x70, 0xf1, 0xe3, 0x63, 0xbf, 0x41, 0xdc, 0xf3, 0xfa, 0x2b, 0x7f, 0x66, 0xba, 0xc5,
	0xc8, 0x0a, 0x9a, 0x62, 0x13, 0xa7, 0x7b, 0x95, 0xe8, 0xf4, 0x9f, 0x6e, 0xb5, 0xa4, 0x18, 0xd0,
	0x0d, 0x60, 0x72, 0xa4, 0x13, 0x23, 0x77, 0xce, 0x10, 0xc5, 0xfd, 0x4d, 0x1b, 0x65, 0x3c, 0x6c,
	0x94, 0x73, 0x82, 0x28, 0xee, 0x6f, 0x6a, 0xd4, 0x03, 0x82, 0x76, 0x7e, 0x74, 0x66, 0x26, 0x7a,
	0x4f, 0x10, 0x6d, 0x10, 0x54, 0xd1, 0x0f, 0x9e, 0xb6, 0xcb, 0x2f, 0xf9, 0xf2, 0x37, 0x00, 0x00,
	0xff, 0xff, 0x88, 0xfb, 0xec, 0xd8, 0xdb, 0x02, 0x00, 0x00,
}
